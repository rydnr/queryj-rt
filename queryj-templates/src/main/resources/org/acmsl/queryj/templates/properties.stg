//;-*- mode: antlr -*-
//
//                      QueryJ
//
//  Copyright (C) 2002-today  ACM-SL
//                           chous@acm-sl.org
//
//  This library is free software; you can redistribute it and/or
//  modify it under the terms of the GNU General Public
//  License as published by the Free Software Foundation; either
//  version 2 of the License, or any later version.
//
//  This library is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
//  General Public License for more details.
//
//  You should have received a copy of the GNU General Public
//  License along with this library; if not, write to the Free Software
//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//
//  Thanks to ACM S.L. for distributing this library under the GPL license.
//  Contact info: jose.sanleandro@acm-sl.com
//  Postal Address: c/Playa de Lagoa, 1
//                  Urb. Valdecabanas
//                  Boadilla del monte
//                  28660 Madrid
//                  Spain
//
//***************************************************************************
//
// Filename: properties.stg
//
// Author: Jose San Leandro Armendariz
//
// Description: Defines common templates for properties.
//
group properties;

property_resultset_retrieval(property, C) ::= <<
<!
 Generates the code to retrieve the property value from the ResultSet.
 @param property the property.
 @param C the context.
!>
<if(!property.clob)>resultSet.get<property.objectType>("<property.id>")<else><clob_property_resultset_retrieval(property=attr, C=C)><endif>
>>

clob_property_resultset_retrieval(property, C) ::= <<
<!
 Deals with Clob properties.
 @param property the property.
 @param C the context.
 !>resultSet.getClob("<property.id>")
 >>

property_getter(property, C) ::= <<
<!
 Writes the getter for given property.
 @param property the property.
!>
/**
 * Retrieves the \<i><property.id>\</i> value.
 * @return such information.
 */
<if(property.allowsNull)
  ><if(!property.strictlyPrimitive)
    ><nullable(C=C)><
    endif
  ><property.objectType> get<property.id.capitalized>()<
else
  ><if(!property.strictlyPrimitive)
    ><notnull(C=C)><
    endif
  ><property.javaType> get<property.id.capitalized>()<
endif>;
>>