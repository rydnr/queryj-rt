//
//                      QueryJ
//
//  Copyright (C) 2002-today  ACM-SL
//                           chous@acm-sl.org
//
//  This library is free software; you can redistribute it and/or
//  modify it under the terms of the GNU General Public
//  License as published by the Free Software Foundation; either
//  version 2 of the License, or any later version.
//
//  This library is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
//  General Public License for more details.
//
//  You should have received a copy of the GNU General Public
//  License along with this library; if not, write to the Free Software
//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//
//  Thanks to ACM S.L. for distributing this library under the GPL license.
//  Contact info: jose.sanleandro@acm-sl.com
//  Postal Address: c/Playa de Lagoa, 1
//                  Urb. Valdecabanas
//                  Boadilla del monte
//                  28660 Madrid
//                  Spain
//
//***************************************************************************
//
// Filename: callbacks.stg
//
// Author: Jose San Leandro Armendariz
//
// Description: Defines the common templates dealing with inner callbacks.
//
group callbacks;

import "type_checkers.stg"

inner_transaction_callbacks(table, parent, repository, engine, C) ::= <<
<!
 Generates the inner classes for transaction callbacks.
 @param table the table.
 @param parent the parent.
 @param repository the repository.
 @param engine the engine.
 @param C the context.
!>
<if(C.lob_handling_required)>
<if(voName)>

/**
 * Transaction callback implementation to perform a
 * \<i>select for update\</i>.
 */
protected static class SelectForUpdateTransactionCallback
    extends QueryTransactionCallback
    implements PreparedStatementCallback
{
<endif>
<endif>
>>
