//;-*- mode: antlr -*-
//
//                      QueryJ
//
//  Copyright (C) 2002-today ACM-SL
//                           chous@acm-sl.org
//
//  This library is free software; you can redistribute it and/or
//  modify it under the terms of the GNU General Public
//  License as published by the Free Software Foundation; either
//  version 2 of the License, or any later version.
//
//  This library is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
//  General Public License for more details.
//
//  You should have received a copy of the GNU General Public
//  License along with this library; if not, write to the Free Software
//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//
//  Thanks to ACM S.L. for distributing this library under the GPL license.
//  Contact info: jose.sanleandro@acm-sl.com
//  Postal Address: c/Playa de Lagoa, 1
//                  Urb. Valdecabanas
//                  Boadilla del monte
//                  28660 Madrid
//                  Spain
//
//***************************************************************************
//
// Filename: AttributesStatementSetter.stg
//
// Author: Jose San Leandro Armendariz
//
// Description: Defines the rules to generate AttributesStatementSetter
//              implementations.
//
//
group AttributesStatementSetter;

import "queryj.stg"

source(C) ::= <<
<!
  Defines the rules to generate AttributesStatementSetter implementations.
  @param C the context.
!>
<sourceImpl(table=C.table, C=C)>
>>

sourceImpl(table, C) ::= <<
<!
  Defines the rules to generate AttributesStatementSetter implementations.
  @param table the table.
  @param C the context.
!>
<if(C.header)>
<C.header>
<else>
<java_header(
  description=
  [
    description(table=table)
  ],
  template="org/acmsl/queryj/templates/AttributesStatementSetter.stg",
  C=C)><endif>
<package_declaration(p=C.package)>
<checkers_import(C=C)>
/*
 * Importing JDK classes.
 */
<if(table.attributeTypes)>
<table.attributeTypes:{ t | import <t>;}; separator="\n">
<endif>


<class(table=table, C=C)>
>>

description(table) ::= <<
<!
  Generates the first line of the generated file description.
  @param result the custom result.
!>
{@link StatementSetter} implementation for <table.name>.
>>

imports(table) ::= <<
<!
  Generates the imports for the attributes' types.
  @param table the table.
!>
<table.attributeTypes:{ t | import <t>;} ; separator="\n">
>>

class(table, C) ::= <<
<!
 Generates the class body.
 @param table the table.
 @param C the context.
!>
/**
 * <[
      description(table=table)
    ]:{line |<line>}; separator="\n * ">
<class_common_javadoc(
  template="org/acmsl/queryj/templates/AttributesStatementSetter.stg", C=C)>
 */
<class_annotations(C=C)>
public class <table.name.voName>AttributesStatementSetter
{
}
>>