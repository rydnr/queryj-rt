//;-*- mode: antlr -*-
//
//                      QueryJ
//
//  Copyright (C) 2002-today ACM-SL
//                           chous@acm-sl.org
//
//  This library is free software; you can redistribute it and/or
//  modify it under the terms of the GNU General Public
//  License as published by the Free Software Foundation; either
//  version 2 of the License, or any later version.
//
//  This library is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
//  General Public License for more details.
//
//  You should have received a copy of the GNU General Public
//  License along with this library; if not, write to the Free Software
//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//
//  Thanks to ACM S.L. for distributing this library under the GPL license.
//  Contact info: jose.sanleandro@acm-sl.com
//  Postal Address: c/Playa de Lagoa, 1
//                  Urb. Valdecabanas
//                  Boadilla del monte
//                  28660 Madrid
//                  Spain
//
//***************************************************************************
//
// Filename: BaseValueObject.stg
//
// Author: Jose San Leandro Armendariz
//
// Description: Defines the rules to generate value object interfaces.
//
//
group BaseValueObject;

import "queryj.stg"

source(C) ::= <<
<!
  Defines the rules to generate value object interfaces.
  @param C the context.
!>
<sourceImpl(table=C.table, C=C)>
>>

sourceImpl(table, C) ::= <<
<!
  Defines the rules to generate value object interfaces.
  @param table the table.
  @param C the context.
!>
<if(C.header)>
<C.header>
<else>
<java_header(
  year=C.current_year,
  description=
  [
    description(table=table)
  ],
  timestamp=C.timestamp)><endif>
<if(C.generation_timestamps_enabled)>
// Generated by QueryJ using org/acmsl/queryj/templates/BaseValueObject.stg at <C.timestamp>
<else>
// Generated by QueryJ using org/acmsl/queryj/templates/BaseValueObject.stg
<endif>

<package_declaration(p=C.package)>

/*
 * Importing some JDK classes.
 */
import java.io.Serializable;
<imports(table=table)>

<class(table=table, C=C)>
>>

description(table) ::= <<
<!                                                          N
  Generates the first line of the generated file description.
  @param result the custom result.
!>
<if(table.comment.empty)><table.comment><else>ValueObject for <table.name> information.<endif>
>>

imports(table) ::= <<
<!
  Generates the imports for the attributes' types.
  @param table the table.
!>
<table.attributeTypes:{ t | import <t>;} ; separator="\n">
>>

class(table, C) ::= <<
<!
 Generates the class body.
 @param table the table.
 @param C the context.
!>
/**
 * <[
      description(table=table)
    ]:{line |<line>}; separator="\n * ">
<class_common_javadoc(
  template="org/acmsl/queryj/templates/BaseValueObject.stg",
  generation_timestamps_enabled=C.generation_timestamps_enabled,
  timestamp=C.timestamp)>
 */
public interface <table.name.voName>
    extends Serializable
{
    <table.attributes:getter(); separator="\n\n">
}
>>

getter(attribute) ::= <<
<!
 Writes the getter for given attribute.
 @param attribute the attribute.
!>
/**
 * <if(attribute.comment)><attribute.comment><else>Retrieves the \<i\><attribute.name>\</i\> value<endif>.
 * @return such information.
 */
<if(!attribute.primitive)><if(attribute.nullable)>@Nullable<else>@NotNull<endif><endif>
<attribute.javaType> get<attribute.name.capitalized>();
>>
