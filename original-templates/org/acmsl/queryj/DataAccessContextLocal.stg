//;-*- mode: antlr -*-
//
//                      QueryJ
//
//  Copyright (C) 2002-2005  ACM-SL
//                           chous@acm-sl.org
//
//  This library is free software; you can redistribute it and/or
//  modify it under the terms of the GNU General Public
//  License as published by the Free Software Foundation; either
//  version 2 of the License, or any later version.
//
//  This library is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
//  General Public License for more details.
//
//  You should have received a copy of the GNU General Public
//  License along with this library; if not, write to the Free Software
//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//
//  Thanks to ACM S.L. for distributing this library under the GPL license.
//  Contact info: jose.sanleandro@acm-sl.com
//  Postal Address: c/Playa de Lagoa, 1
//                  Urb. Valdecabanas
//                  Boadilla del monte
//                  28660 Madrid
//                  Spain
//
//***************************************************************************
//
// Filename: $RCSfile: $
//
// Author: Jose San Leandro Armendariz
//
// Description: Defines the rules to generate configuration property
//              files.
//
// Version: $Revision$ ($Author$ at $Date$)
//
// $Id$
//
group ConfigurationProperties;

source(input) ::= <<
<!
 Generates configuration properties.
 @param input.copyright_years the copyright's years.
 @param input.tables the tables.
 @param input.repository the repository.
 @param input.daoFactoryPackage the DAOFactory package.
!>
\<?xml version="1.0" encoding="UTF-8"?\>
\<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd"\>
<if(input.header)>
\<!--
<input.splitted_header:{<it>}; separator="\n">
-->
<else>
<java_header(
  years=input.copyright_years,
  description=
  [
    "Specifies the transactional behaviour of the DAO layer."
  ],
  timestamp=input.timestamp)>
<endif>
\<!-- Generated by $Id$ --\>

\<beans\>
\<!-- ========================= RESOURCE DEFINITIONS ========================= --\>
  \<!-- Main JNDI DataSource for J2EE environments --\>
  \<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean"\>
    \<property name="jndiName"\>\<value\>\<input.jndi_location\>\</value\>\</property\>
  \</bean\>
  \<bean
    id="transactionManager"
    class="org.springframework.jdbc.datasource.DataSourceTransactionManager"\>
    \<property name="dataSource"\>\<ref local="dataSource"/\>\</property\>
  \</bean\>
  <input.tables:dao_definition(
    table=it,
    engineName=input.engine_name,
    engineNameLowercased=input.engine_name_lowercased,
    basePackageName=input.base_package_name,
    baseDAOSubpackageName=typeInitMap.baseDAOSubpackageName,
    subpackageName=typeInitMap.rdbSubpackageName);
   separator="\n\n">

<if(input.repository_dao)>
  <repository_dao_definition(
    repository=input.tr_name,
    repositoryCapitalized=input.tr_name_capitalized,
    engineName=input.engine_name,
    engineNameLowercased=input.engine_name_lowercased,
    basePackageName=input.base_package_name,
    baseDAOSubpackageName=typeInitMap.baseDAOSubpackageName,
    subpackageName=typeInitMap.rdbSubpackageName)>
<endif>

\</beans\>
>>

dao_definition(
  table,
  engineName,
  engineNameLowercased,
  basePackageName,
  baseDAOSubpackageName,
  subpackageName) ::= <<
<!
 Generates the DAO Spring definition.
 @param table the table.
 @param engineName the engine name.
 @param engineNameLowercased the engine name, in lower case.
 @param basePackageName the base package name.
 @param baseDAOSubpackageName the base DAO subpackage name.
 @param subpackageName the subpackage name.
!>
# <table.name> DAO implementation.
\<!-- DAO declaration for <table.name> --\>
\<bean
  id="<table.voName>DAO"
  class="<basePackageName>.<baseDAOSubpackageName>.<subpackageName>.<engineNameLowercased>.<engineName><table.singularNameCapitalized>DAO"\>
  \<property name="dataSource"\>\<ref local="dataSource"/\>\</property\>
\</bean>
\<!-- Transactional declaration for <table.name> DAO --\>
\<bean id="<table.voName>" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"\>
  \<property name="transactionManager"\>\<ref local="transactionManager"/\>\</property\>
  \<property name="target"\>\<ref bean="<input.voName>DAO"/\>\</property\>
  \<property name="transactionAttributes"\>
    \<props\>
      \<!-- See 17.6.2.7, table 14, of EJB Specification 2.1 Final Release --\>
      \<prop key="*"\>PROPAGATION_REQUIRED\</prop\>
    \</props\>
  \</property\>
\</bean\>
>>

repository_dao_definition(
  repository,
  repositoryCapitalized,
  engineName,
  engineNameLowercased,
  basePackageName,
  baseDAOSubpackageName,
  subpackageName) ::= <<
<!
 Generates the DAO Spring definition.
 @param repository the repository.
 @param repositoryCapitalized the repository, capitalized.
 @param engineName the engine name.
 @param engineNameLowercased the engine name, in lower case.
 @param basePackageName the base package name.
 @param baseDAOSubpackageName the base DAO subpackage name.
 @param subpackageName the subpackage name.
!>
# <repository> DAO implementation.
\<!-- DAO declaration for the whole <repository> repository --\>
\<bean
  id="<repositoryCapitalized>DAO"
  class="<basePackageName>.<baseDAOSubpackageName>.<subpackageName>.<engineNameLowercased>.<engineName><repositoryCapitalized>DAO"\>
  \<property name="dataSource"\>\<ref local="dataSource"/\>\</property\>
\</bean>
\<!-- Transactional declaration for <repository> DAO --\>
\<bean id="<repositoryCapitalized>" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"\>
  \<property name="transactionManager"\>\<ref local="transactionManager"/\>\</property\>
  \<property name="target"\>\<ref bean="<repositoryCapitalized>DAO"/\>\</property\>
  \<property name="transactionAttributes"\>
    \<props\>
      \<!-- See 17.6.2.7, table 14, of EJB Specification 2.1 Final Release --\>
      \<prop key="*"\>PROPAGATION_REQUIRED\</prop\>
    \</props\>
  \</property\>
\</bean\>
>>
